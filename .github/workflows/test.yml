name: CI with Docker Compose

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: F5rs9ku4h
          POSTGRES_DB: recipes
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-maven-

    - name: Install dependencies
      run: mvn install -DskipTests

    - name: Install Docker Compose
      run: sudo apt-get install docker-compose

    - name: Build Docker images
      run: docker-compose -f docker-compose.yml build

    - name: Start services
      run: docker-compose -f docker-compose.yml up -d

    - name: Wait for PostgreSQL to be ready
      run: |
        for i in `seq 1 30`; do
          nc -z localhost 5432 && echo Success && exit 0
          echo "Waiting for PostgreSQL..."
          sleep 1
        done
        echo "PostgreSQL did not start in time" && exit 1

    - name: Run tests
      run: docker-compose -f docker-compose.yml run web mvn test

    - name: Stop services
      run: docker-compose -f docker-compose.yml down
